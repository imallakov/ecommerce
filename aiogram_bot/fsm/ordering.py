from aiogram import Router, F
from aiogram.filters import StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import Message, CallbackQuery

from database.requests import get_user, get_all_cartitems_of_user
from keyboards.callbackdata import CartItemData
from keyboards.inline_keyboards import order_keyboard
from utils.save_to_excel import save_order_to_excel_file

order_fsm_router = Router()


class FSMorder(StatesGroup):
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –∫–ª–∞—Å—Å–∞ State, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
    # –ø–µ—Ä–µ—á–∏—Å–ª—è—è –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è
    # –±–æ—Ç –≤ —Ä–∞–∑–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    enter_address = State()
    enter_contact = State()


@order_fsm_router.callback_query(CartItemData.filter(F.event == 'order'))
async def ask_address(query: CallbackQuery, state: FSMContext):
    cartitems = await get_all_cartitems_of_user(user_id=query.message.chat.id)
    if len(cartitems) == 0:
        await query.answer(
            text='–í –∫–æ—Ä–∑–∏–Ω–µ –ø—É—Å—Ç–æü§∑üèª‚Äç‚ôÇÔ∏è',
            show_alert=True,
        )
    else:
        await state.set_state(FSMorder.enter_address)
        sent_message = await query.message.edit_text(text='–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:',
                                                     reply_markup=await order_keyboard(text='–û—Ç–º–µ–Ω–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É'))
        await state.update_data(message_id=sent_message.message_id)


@order_fsm_router.message(StateFilter(FSMorder.enter_address))
async def address_is_entered(message: Message, state: FSMContext):
    await state.update_data(address=message.text)
    await message.delete()
    data = await state.get_data()
    message_id = data['message_id']
    await message.bot.edit_message_text(chat_id=message.chat.id,
                                        message_id=message_id,
                                        text='–ê–¥—Ä–µ—Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω!‚úÖ\n–£–∫–∞–∂–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–∞—à '
                                             '—Ç–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä, —ç—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–± –º—ã –º–æ–≥–ª–∏ –ø–æ–¥–≤–µ—Ä–¥–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É:',
                                        reply_markup=await order_keyboard(text='–û—Ç–º–µ–Ω–∏—Ç—å –¥–æ—Å—Ç–∞–≤–∫—É'))
    await state.set_state(FSMorder.enter_contact)


@order_fsm_router.message(StateFilter(FSMorder.enter_contact))
async def address_is_entered(message: Message, state: FSMContext):
    await state.update_data(number=message.text)
    await message.delete()
    data = await state.get_data()
    message_id = data['message_id']
    await message.bot.edit_message_text(chat_id=message.chat.id,
                                        message_id=message_id,
                                        text='–°–ø–∞—Å–∏–±–æ!‚úÖ\n–£–∂–µ –æ—Ñ–æ—Ä–º–ª—è–µ–º –≤–∞—à—É –∑–∞—è–≤–∫—É!',
                                        reply_markup=await order_keyboard(text='–•–æ—Ä–æ—à–æüëçüèª'))
    user = await get_user(user_id=message.chat.id)
    items = await get_all_cartitems_of_user(user_id=user.id)
    await save_order_to_excel_file(user_id=user.id, username=user.username, phone_number=message.text, items=items,
                                   address=data['address'])
    await state.clear()
